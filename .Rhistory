getwd()
setwd("/Users/michaelvolpe/Desktop")
poll<- read.table("aa.txt", header = TRUE)
setwd("/Users/michaelvolpe/Desktop")
opts_knit$set(root.dir ="/Users/michaelvolpe/Desktop")
setwd(~"/Users/michaelvolpe/Desktop")
setwd("~/Users/michaelvolpe/Desktop")
setwd("/Users/michaelvolpe/Desktop")
setwd("/Users/michaelvolpe/Desktop")
poll<- read.table("aa.txt", header = TRUE)
poll<- read.table("aa.txt", header = TRUE)
getwd()
Da
poll<- read.table("aa.txt", header = TRUE)
setwd("/Users/michaelvolpe/Desktop/Data")
install.packages("knitr")
install.packages("knitr")
install.packages("ggplot2")
install.packages("hypergea")
library(knitr)
library(ggplot2)
install.packages("knitr")
library(knitr)
install.packages("ggplot2")
install.packages("hypergea")
library(knitr)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(hypergea)
opts_knit$set(root.dir = 'c:/Users/michaelvolpe/Desktop/Data')
library(knitr)
library(hypergea)
poll<- read.table("aa.txt", header = TRUE)
poll<- read.table("hi.txt", header = TRUE)
poll<- read.table("aa.txt", header = TRUE)
opts_knit$set(root.dir = 'c:/Users/michaelvolpe/Desktop/Data')
poll<- read.table("aa.txt", header = TRUE)
opts_knit$set(root.dir = 'c:/Users/michaelvolpe/Desktop')
poll<- read.table("aa.txt", header = TRUE)
poll<- read.table('aa.txt', header = TRUE)
opts_knit$set(root.dir = 'c:/Users/michaelvolpe/Desktop')
library(knitr)
library(hypergea)
opts_knit$set(root.dir = 'c:/Users/michaelvolpe/Desktop')
poll<- read.table('aa.txt', header = TRUE)
plot(poll$perot, poll$buchanan, main = "Number of Votes for Buchanan against the Number of Votes for Perot", ylab = "Buchanan", xlab = "Perot",pch = 1, col= "blue")
text(poll$perot, poll$buchanan, labels = row.names(poll), cex = 0.7, pos = 1)
which(rownames(poll) =="PalmBeach")
poll_new <- poll[-50,]
fit1 <- glm(buchanan~perot, data = poll_new)
summary(fit1)
yhati = .02*30739
yhati
ratio = 3407/yhati
ratio
#deviance#
deviance(fit1)
#linearmodel#
lmfit <- lm(buchanan~perot, data = poll_new)
sum(residuals(lmfit)^2)
#sum of squared default residuals from the glm function
sum(residuals(fit1)^2)
as.data.frame(load("/Users/michaelvolpe/Desktop/depress.Rdata"))
str(depress)
depressed <- subset(depress, cases ==1, select =c(drink,sex))
depressed_contingency <- xtabs(~drink+sex, data=depressed)
depressed_contingency
getOddsRatio(depressed_contingency)
1/getOddsRatio(depressed_contingency)
notd<-subset(depress, cases ==0, select=c(drink,sex))
notd_contingency <- xtabs(~drink+sex, data = notd)
notd_contingency
1/getOddsRatio(notd_contingency)
drink_f <- as.factor(depress$drink)
cases_f <- as.factor(depress$cases)
sex_f <- as.factor(depress$sex)
fit2 <- glm(drink_f ~ cases_f + sex_f + cases_f:sex_f, family="binomial")
summary(fit2)
summary(fit2)
(exp(-1.8269 + 0.4406*1 + 0.7743*2 +(-0.9386*1*2))/exp(-1.8269 +.4406*1 + 0.7743*1 +(-.9386*1*1)))^-1
(exp(-1.8269+.4406*0+.7743*2+(-0.9386*0*2))/ exp(-1.8269+0.4406*0+0.7743*1 + (-0.9386*0*1)))^-1
install.packages("dobson")
library(knitr)
library(hypergea)
library(dobson)
dat <- attach(insurance)
View(dat)
str(dat)
rm(dat)
attach(insurance)
attach(insurance)
dat <- insurance
View(dat)
str(dat)
dat$ROC <- dat$y / dat$n
str(dat)
boxplot(ROC~age, main = "Rate of Claims by Age", xlab = "Age", ylab = "ROC", data = dat)
boxplot(ROC~car, main = "Rate of Claims by Insurance Categories", xlab = "insurance category", ylab = "ROC", data = dat)
boxplot(ROC~dist, main = "Rate of Claims by District", xlab = "District", ylab= "ROC", data = dat)
boxplot(ROC~age, main = "Rate of Claims by Age", xlab = "Age", ylab = "ROC", data = dat)
boxplot(ROC~car, main = "Rate of Claims by Insurance Categories", xlab = "insurance category", ylab = "ROC", data = dat)
boxplot(ROC~district, main = "Rate of Claims by District", xlab = "District", ylab= "ROC", data = dat)
par(mfrow=c(2,2))
boxplot(ROC~age, main = "Rate of Claims by Age", xlab = "Age", ylab = "ROC", data = dat)
boxplot(ROC~car, main = "Rate of Claims by Insurance Categories", xlab = "insurance category", ylab = "ROC", data = dat)
boxplot(ROC~district, main = "Rate of Claims by District", xlab = "District", ylab= "ROC", data = dat)
dat_factor <- dat
str(dat)
dat_factor$car <- factor(dat_factor$car)
dat_factor$age <- factor(dat_factor$age)
dat_factor$district <- factor(dat_factor$district)
str(dat_factor)
model <- glm(formula = y~car + age + district, data = dat_factor, family = poisson(link = "log"), offset = log(n))
summary(model)
?stepAIC
install.packages("MASS")
library(MASS)
summary(stepAIC(model, scope = list(lower = ~1, upper = ~ .^3), direction = "both"))
summary(stepAIC(model, scope = list(lower = ~1, upper = ~ .^2), direction = "both"))
summary(stepAIC(model, scope = list(lower = ~1, upper = ~ .^3), direction = "both"))
?stepAIC
summary(stepAIC(model, scope = list(lower = ~0, upper = ~ .^3), direction = "both"))
model <- glm(formula = y~car + age + district, family = poisson(link = "log"), data = dat_factor,  offset = log(n))
summary(stepAIC(model, scope = list(lower = ~0, upper = ~ .^3), direction = "both"))
model <- glm(formula = y~car + age + district +ROC, family = poisson(link = "log"), data = dat_factor,  offset = log(n))
summary(stepAIC(model, scope = list(lower = ~0, upper = ~ .^3), direction = "both"))
model <- glm(formula = y~car + age + district, family = poisson(link = "log"), data = dat_factor,  offset = log(n))
summary(stepAIC(model, scope = list(lower = ~0, upper = ~ .^3), direction = "both"))
f_model <- glm(formula = y~car + age + district, family = poisson(link = "log"), data = dat_factor,  offset = log(n))
summary(f_model)
summary(stepAIC(model, scope = list(lower = ~0, upper = ~ .^3), direction = "both"))
summary(f_model)
summary(stepAIC(model, scope = list(lower = ~0, upper = ~ .^3), direction = "both"))
model_c <- glm(formula = y~age + car + factor(district), family = poisson(link = "log"), data = dat, offset = log(n))
summary(model_c)
summary(f_model)
str(dat)
dat$district <- factor(district)
dat
str(district)
str(dat)
model_c <- glm(formula = y~age + car + district, family = poisson(link = "log"), data = dat, offset = log(n))
summary(model_c)
exp(coef(model_c))
exp(confint(model_c))
?confint
exp(confint(model_c, level = .95))
exp(confint(model_c, level = 0.95))
exp(coef(model_c))
exp(confint(model_c, level = 0.95))
install.packages("RSelenium")
library(pdftools)
install.packages("pdftools")
library(pdftools)
install.packages("pdftools")
library(pdftools)
library(tidyr)
library(dplyr)
library(tidyverse)
install.packages("tabulizer")
library(tabulizer)
location <- "http://archive.flclerks.com/Pub_info/2015_Pub_info/2014_Clerks_A_and_C_Consolidated_Summary_Report_010215.pdf"
?extract_tables
CircuitCriminalMandatory2014 <- extract_tables(location, pages = c(9,10))
download.file("http://archive.flclerks.com/Pub_info/2015_Pub_info/2014_Clerks_A_and_C_Consolidated_Summary_Report_010215.pdf", "CircuitCriminalMandatory2014", mode = "wb")
download.file("http://archive.flclerks.com/Pub_info/2015_Pub_info/2014_Clerks_A_and_C_Consolidated_Summary_Report_010215.pdf", "CircuitCriminalMandatory2014.pdf", mode = "wb")
CircuitCriminalMandatory2014 <- pdf_text("CircuitCriminalMandatory.pdf")
CircuitCriminalMandatory2014 <- pdf_text("CircuitCriminalMandatory2014.pdf")
cat(txt[9])
cat(CircuitCriminalMandatory2014[9])
cat(CircuitCriminalMandatory2014[10])
location <-"http://archive.flclerks.com/Pub_info/2015_Pub_info/2014_Clerks_A_and_C_Consolidated_Summary_Report_010215.pdf"
library(pdftools)
library(tidyr)
library(dplyr)
library(tidyverse)
library(tabulizer)
extract_tables(location, pages = c(10,11))
install.packages("installr")
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install.packages("devtools")
install.packages("stringi")
library(devtools)
install_github('dirkmjk/read.survey')
library(read.survey)
library(gmodels)
library(devtools)
install_github('dirkmjk/read.survey')
library(read.survey)
setwd("/Users/michaelvolpe/Desktop/Survey_Monkey_CSV")
data <- read.surveymonkey("Texas_Survey.csv", format = "csv")
library(tidyr)
library(dplyr)
library(stringi)
install.packages("stringi")
(stringi)
library(tabulizer)
getwd()
setwd("/Users/michaelvolpe/Desktop")
?system.file
baspdf<-system.file("NM_Caseloads_2017.pdf", package = "tabulizer")
basepdf<-system.file("NM_Caseloads_2017.pdf", package = "tabulizer")
basepdf
getwd()
get_n_pages(basepdf)
setwd("/Users/michaelvolpe/Desktop")
basepdf<-system.file("NM_Caseloads_2017.pdf", package = "tabulizer")
basepdf<-system.file("/Users/michaelvolpe/Desktop/NM_Caseloads_2017.pdf", package = "tabulizer")
rm(list=ls())
basepdf<-system.file("CaseloadsNM2017.pdf", package = "tabulizer")
basepdf<-system.file("Desktop", "CaseloadsNM2017.pdf", package = "tabulizer")
getwd()
basepdf<-get_n_pages("/Users/michaelvolpe/Desktop/CaseloadsNM2017.pdf")
getwd()
basepdf<-get_n_pages("~/Users/michaelvolpe/Desktop/CaseloadsNM2017.pdf")
basepdf<-get_n_pages("Users/michaelvolpe/Desktop/CaseloadsNM2017.pdf")
basepdf<-get_n_pages("/Users/michaelvolpe/Desktop/CaseloadsNM2017.pdf")
basepdf
extract_areas()
extract_areas("/Users/michaelvolpe/Desktop/CaseloadsNM2017.pdf",10)
install.packages("miniUI")
pdf <-"/Users/michaelvolpe/Desktop/CaseloadsNM2017.pdf"
?extract_areas1
?extract_areas
extract_areas(pdf,10)
?extract_tables
extract_tables(pdf,10)
extract_tables(pdf)
library(tidyverse)
library(rJava)
library(tabulizer)
pdf <-"/Users/michaelvolpe/Desktop/CaseloadsNM2017.pdf"
extract_tables(pdf,10)
library(tidyverse)
library(rJava)
library(tabulizer)
pdf <-"/Users/michaelvolpe/Desktop/CaseloadsNM2017.pdf"
extract_tables(pdf,10)
library(tidyverse)
library(rJava)
library(tabulizer)
pdf <-"/Users/michaelvolpe/Desktop/CaseloadsNM2017.pdf"
extract_tables(pdf,10)
pdf_tables <- list(NA)
for(i in 6:86){
pdf_tables[[i]] <- extract_tables(pdf, i)
}
View(pdf_tables)
pdf_tables[[6]]
seq(6:86)
library(tidyverse)
library(rJava)
library(tabulizer)
#create base pdf
pdf <-"/Users/michaelvolpe/Desktop/CaseloadsNM2017.pdf"
#for loop to extract all tables
pdf_tables <- list(NA)
for(i in 1:86){
pdf_tables[[i]] <- extract_tables(pdf, i)
}
pdf_tables[[1]]
pdf_tables[[2]]
pdf_tables[[3]]
pdf_tables[[4]]
pdf_tables[[5]]
pdf_tables[[6]]
pdf_tables[[7]]
View(pdf_tables)
#remove NA lists from pdf_tables
lapply(pdf_tables, na.exclude)
#remove NA lists from pdf_tables
pdf_tables <- lapply(pdf_tables, na.exclude)
length(pdf_tables)
View(pdf_tables)
pdf_tables[[5]]
pdf_tables[[84]]
pdf_tables[[1]]
pdf_tables[[3]]
pdf_tables[[4]]
length(pdf_tables[[1]])
#remove NA lists from pdf_tables
pdf_tables <- pdf_tables[lapply(pdf_tables,length)>0]
length(pdf_tables[[50]])
pdf_tables[[48]]
pdf_tables[[487]]
pdf_tables[[7]]
pdf_tables[[47]]
View(pdf_tables)
pdf_tables[[47]][1,3]
pdf_tables[[47]][[1,3]]
pdf_tables[[7]][[1,3]]
pdf_tables[[7]]
pdf_tables[[7]][,1]
pdf_tables[[7]][[,1]]
pdf_tables[[7]][3,1]
pdf_tables[[7]][[,1]]
str(pdf_tables[[7]])
data.frame(pdf_tables[[7]])
#convert each entry in list to dataframe for easier manipulation
pdf_tables <- lapply(pdf_tables, data.frame)
View(pdf_tables)
pdf_tables[[1]]
pdf_tables[[81]]
# list entries of length 4 or greater
greater4 <- pdf_tables[lapply(pdf_tables,length)>=4]
View(greater4)
pdf_tables <- pdf_tables[lapply(pdf_tables,length)==1]
greater4[[1]]
list(greater4[[1]])
list(greater4[[1]])
list(greater4[[1]][1])
length(greater4)
greater4[[1]]
greater4[[1]][1]
greater4_ed <- NA
for(i in 1:length(greater4)){
for(j in 1:4){
greater4_ed[[i]] <- list(greater4[[i]][j])
}
}
greater4_ed[1]
for(i in 1:length(greater4)){
for(j in 1:4){
greater4_ed[[j]] <- list(greater4[[i]][j])
}
}
greater4_ed <- NA
for(i in 1:length(greater4)){
for(j in 1:4){
greater4_ed[[j]] <- list(greater4[[i]][j])
}
}
greater4_ed[1]
greater4_ed <- NA
for(i in 1:length(greater4)){
for(j in 1:4){
greater4_ed[[j]] <- list(greater4[[i]][j])
}
}
length(greater4_ed[1])
length(greater4_ed)
length(greater4_ed[2])
list(greater4[[1]])
list(greater4[[1]][1])
list(greater4[[2]][1])
list(greater4[[3]][1])
list(greater4[[4]][1])
for(i in 1:length(greater4)){
greater4_ed[[i]] <- list(greater4[[i]][1])
greater4_ed[[i]] <- list(greater4[[i]][2])
greater4_ed[[i]] <- list(greater4[[i]][3])
greater4_ed[[i]] <- list(greater4[[i]][4])
}
greater4_ed[[1]]
View(greater4_ed)
length(greater4_ed)
greater4[[1]]
greater4 <- pdf_tables[lapply(pdf_tables,length)>=4]
pdf_tables <- pdf_tables[lapply(pdf_tables,length)==1]
greater4_ed1 <- NA
for(i in 1:length(greater4)){
greater4_ed1[[i]] <- list(greater4[[i]][1])
}
greater4_ed2 <- NA
for(i in 1:length(greater4)){
greater4_ed2[[i]] <- list(greater4[[i]][2])
}
greater4_ed3 <- NA
for(i in 1:length(greater4)){
greater4_ed3[[i]] <- list(greater4[[i]][3])
}
greater4_ed4 <- NA
for(i in 1:length(greater4)){
greater4_ed4[[i]] <- list(greater4[[i]][4])
}
library(tidyverse)
library(rJava)
library(tabulizer)
#create base pdf
pdf <-"/Users/michaelvolpe/Desktop/CaseloadsNM2017.pdf"
#for loop to extract all tables
pdf_tables <- list(NA)
for(i in 1:86){
pdf_tables[[i]] <- extract_tables(pdf, i)
}
#remove empty lists from pdf_tables
pdf_tables <- pdf_tables[lapply(pdf_tables,length)>0]
# list entries of length 4 or greater
greater4 <- pdf_tables[lapply(pdf_tables,length)>=4]
pdf_tables <- pdf_tables[lapply(pdf_tables,length)==1]
greater4_ed1 <- NA
for(i in 1:length(greater4)){
greater4_ed1[[i]] <- list(greater4[[i]][1])
}
greater4_ed2 <- NA
for(i in 1:length(greater4)){
greater4_ed2[[i]] <- list(greater4[[i]][2])
}
greater4_ed3 <- NA
for(i in 1:length(greater4)){
greater4_ed3[[i]] <- list(greater4[[i]][3])
}
greater4_ed4 <- NA
for(i in 1:length(greater4)){
greater4_ed4[[i]] <- list(greater4[[i]][4])
}
c(greater4_ed1,greater4_ed2)
greater4 <- c(greater4_ed1, greater4_ed2, greater4_ed3, greater4_ed4)
rm(greater4_ed1,greater4_ed2,greater4_ed3,greater4_ed4)
pdf_tables <- c(pdf_tables, greater4)
#convert each entry in list to dataframe for easier manipulation
pdf_tables <- lapply(pdf_tables, data.frame)
View(pdf_tables)
pdf_tables[[1]]
names(pdf_tables)
paste(nmcourt, 1:122)
paste("nmcourt", 1:122)
paste("nmcourt",1:122)
paste("nmcourt",1:122,sep="")
names(pdf_tables) <- paste0("nmcourt",1:22,sep="")
names(pdf_tables)
names(pdf_tables) <- paste0("nmcourt",1:122,sep="")
names(pdf_tables)
setwd("/Users/michaelvolpe/Desktop/nm")
names(pdf_tables) <- paste0("nmcourt",1:122,sep="")
for(i in names(pdf_tables)){
write.csv(pdf_tables
[[i]], paste0(i,".csv"))
}
